# Libraries
library(igraph)
install.packages(igraph)
install.packages("igraph")
install.packages("networkD3")
# Libraries
library(igraph)
library(networkD3)
# create a dataset:
data <- data_frame(
from=c("A", "A", "B", "D", "C", "D", "E", "B", "C", "D", "K", "A", "M"),
to=c("B", "E", "F", "A", "C", "A", "B", "Z", "A", "C", "A", "B", "K")
)
library(dplyr)
# create a dataset:
data <- data_frame(
from=c("A", "A", "B", "D", "C", "D", "E", "B", "C", "D", "K", "A", "M"),
to=c("B", "E", "F", "A", "C", "A", "B", "Z", "A", "C", "A", "B", "K")
)
# Plot
p <- simpleNetwork(data, height="100px", width="100px")
p
# Chapter 1
data(mpg)
# A simple plot
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
library(ggplot2)
# Chapter 1
data(mpg)
# A simple plot
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
## Aesthetic mappings ##################
# A simple plot with color as a distinguishing factor
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
### Statistical Transformations ###
data(diamonds)
# barplot
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
View(diamonds)
library(ggplot2)
##### random data
runif(1)
# Get a vector of 4 numbers
a <- runif(100, min=0, max=4)
ages <- floor(runif(100, min=18, max=51))
ages <- floor(runif(100, min=18, max=51))
height <- floor(runif(100, min=46, max=95))
View(diamonds)
# Get a vector of 4 numbers
exercise_daily <- runif(100, min=0, max=200)
exercise_daily <- rnorm(100, mean=1, sd=10)
gp_visits <- rnorm(100, mean=1, sd=10)
gp_visits <- rnorm(100, mean=1, sd=+2)
gp_visits <- rnorm(100, mean=1, sd=+2)
df <- data.frame(dose=c("D0.5", "D1", "D2"),
len=c(4.2, 10, 29.5))
## Positional adjustments ##
# can colour with fill or colour
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, colour = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = cut))
# geom smooth is now only reppresentative of subcompacts and doesn't show shaded area
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(color = class)) +
geom_smooth(data = filter(mpg, class == "subcompact"), se = FALSE)
rm(list=ls())
setwd("~/r_dataviz")
library(ggplot2)
library(datasets)
?datasets
library(datasets)
rm(list=ls())
source('~/r_dataviz/demo.r')
source('~/r_dataviz/demo.r')
source('~/r_dataviz/demo.r')
library(ggplot2)  # to plot
library(dplyr)    # to clean up
library(readr)    # to open csv
library(datasets)
rm(list=ls())
library(ggplot2)  # to plot
library(dplyr)    # to clean up
library(readr)    # to open csv
library(datasets)
sin(340)
si
data(airquality)
force(airquality)
View(airquality)
View(airquality)
ggplot(airquality)
library
install.packages(ggplot2)
library(ggplot2)  # to plot
detach("package:ggplot2", unload = TRUE)
install.packages("ggplot2")
ggplot(airquality) +
geom_point(mapping = aes(x = Day, y = Temp))
ggplot(airquality) +
geom_point(mapping = aes(x = Day, y = Temp))
library(ggplot2)  # to plot
ggplot(airquality) +
geom_point(mapping = aes(x = Day, y = Temp))
ggplot(airquality) +
geom_point(mapping = aes(x = Day, y = Temp)) +
xlab("days in the month") +
ylab("Tempature") +
ggtitle("Temperature for 5 months")
ggplot(airquality) +
geom_point(mapping = aes(x = Day, y = Temp)) +
xlab("days in the month") +
ylab("Tempature")
ggplot(airquality) +
geom_point(mapping = aes(x = Day, y = Temp)) +
xlab("days in the month") +
ylab(Tempature) +
ggtitle("Temperature for 5 months")
# data type is a type of data structure
temperature <- 4
ggplot(airquality) +
geom_point(mapping = aes(x = Day, y = Temp)) +
xlab("days in the month") +
ylab(temperature) +
ggtitle("Temperature for 5 months")
ggplot(airquality) +
geom_point(mapping = aes(x = Day, y = Temp)) +
xlab("days in the month") +
ylab("temperature") +
ggtitle("Temperature for 5 months")
View(airquality)
View(airquality)
# add different colors for each month
ggplot(airquality) +
geompoint(mapping = aes(x=Day, y=Temp, color=Month))
# add different colors for each month
ggplot(airquality) +
geom_point(mapping = aes(x=Day, y=Temp, color=Month))
# data type is a type of data structure
ggplot(airquality) +
geom_point(mapping = aes(x = Day, y = Temp)) +
xlab("days in the month") +
ylab("Temperature") +
ggtitle("Temperature for 5 months")
# add different colors for each month
ggplot(airquality) +
geom_point(mapping = aes(x=Day, y=Temp, color=Month))
# add different colors for each month
ggplot(airquality) +
geom_point(mapping = aes(x=Day, y=Temp, color=Month))
# add different colors for each month
ggplot(airquality) +
geom_point(mapping = aes(x=Day, y=Temp, color=Month))
# discrete or continuous variables
airquality$Month <- as.character(airquality$Month)
# add different colors for each month
ggplot(airquality) +
geom_point(mapping = aes(x=Day, y=Temp, color=Month))
View(airquality)
# discrete or continuous variables
airquality$Month <- as.character(airquality$Month)
# add different colors for each month
ggplot(airquality) +
geom_point(mapping = aes(x=Day, y=Temp, color=Month))
airquality[1,1]
View(airquality)
View(airquality)
month <- airquality[5,]
View(month)
month <- airquality[,5]
# visualise months differently
ggplot(airquality) +
geom_point(mapping = aes(x=Day, y=Temp)) +
facet_wrap(~ Month, ncol = 2)
?facet_wrap
?facet_wrap
# visualise months differently
ggplot(airquality) +
geom_point(mapping = aes(x=Day, y=Temp)) +
facet_wrap(Month, ncol = 2)
View(airquality)
# visualise months differently
ggplot(airquality) +
geom_point(mapping = aes(x=Day, y=Temp)) +
facet_wrap(Wind ~ Month, ncol = 2)
data(diamonds)
data(mpg)
data(mpg)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hw)) ]
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hw)) +
facet_grid(drv ~ cyl)
data(mpg)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hw)) +
facet_grid(drv ~ cyl)
ggplot(mpg) +
geom_point(mapping = aes(x = displ, y = hw)) +
facet_grid(drv ~ cyl)
data(mpg)
ggplot(mpg) +
geom_point(mapping = aes(x = displ, y = hw)) +
facet_grid(drv ~ cyl)
detach("package:ggplot2", unload = TRUE)
install.packages("ggplot2")
library(ggplot2)  # to plot
